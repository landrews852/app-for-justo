# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateEmployeeInput {
  email: String!
  name: String!
  position: String
}

input CreateHistoryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateItemInput {
  createdBy: String!
  model: String!
  name: String!
  serialNumber: String!
  whereIsIt: String
}

input CreateStoreInput {
  location: String!
  name: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Employee {
  _id: ID!
  createdBy: User
  email: String!
  employeeHistory: [EmployeeHistory!]!
  itemsInPossession: [Item!]!
  name: String!
  position: String!
}

type EmployeeHistory {
  _id: String!
  action: String!
  date: DateTime!
  itemName: String!
  serialNumber: String!
}

input FindEmployeeInput {
  _id: Int
  email: String
  name: String
  position: String
}

input FindHistoryInput {
  _id: ID
}

input FindItemInput {
  _id: ID
  serialNumber: String
}

input FindStoreInput {
  _id: Int
  name: String
}

input FindUserInput {
  _id: Int!
}

type History {
  _id: ID!
  action: String!
  date: DateTime!
  relationID: String!
  type: String!
}

type Item {
  _id: ID!
  createdBy: User
  itemHistory: [ItemHistory!]!
  model: String!
  name: String!
  serialNumber: String!
  whereIsIt: String
}

type ItemHistory {
  action: String!
  date: DateTime!
  relationId: String!
  type: String!
}

type Mutation {
  createEmployee(input: CreateEmployeeInput!): Employee!
  createHistory(input: CreateHistoryInput!): History!
  createItem(input: CreateItemInput!): Item!
  createStore(input: CreateStoreInput!): Store!
  createUser(input: CreateUserInput!): User!
  removeItem(_id: String!): Item!
  updateEmployee(input: UpdateEmployeeInput!): Employee!
  updateHistory(input: UpdateHistoryInput!): History!
  updateItem(input: UpdateItemInput!): Item!
  updateStore(input: UpdateStoreInput!): Store!
}

type Query {
  employee(input: FindEmployeeInput!): Employee!
  employees: [Employee!]!
  history(input: FindHistoryInput!): History!
  item(input: FindItemInput!): Item!
  items: [Item!]!
  store(input: FindStoreInput!): Store!
  stores: [Store!]!
  user(input: FindUserInput!): User!
  users: [User!]!
}

type Store {
  _id: ID!
  history: [StoreHistory!]!
  location: String!
  name: String!
}

type StoreHistory {
  _id: String!
  action: String!
  date: DateTime!
  itemName: String!
  serialNumber: String!
}

input UpdateEmployeeInput {
  _id: ID!
  email: String
  name: String
  position: String
}

input UpdateHistoryInput {
  _id: String

  """Example field (placeholder)"""
  exampleField: Int
}

input UpdateItemInput {
  _id: ID!
  createdBy: String
  model: String
  name: String
  serialNumber: String
  whereIsIt: String
}

input UpdateStoreInput {
  _id: Int!
  location: String
  name: String
}

type User {
  _id: ID!
  email: String!
  itemsCreated: [Item!]!
  password: String!
  username: String!
}